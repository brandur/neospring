name: neospring CI

env:
  GO_VERSION: 1.19

on:
  pull_request:
  push:
  schedule:
    # every day at 8 AM
    - cron: "0 8 * * *"

jobs:
  build_docker_image:
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build .

  deploy_google_cloud_run:
    if: github.ref == 'refs/heads/master'
    needs:
      - build_docker_image
      - golangci-lint
      - program_starts
      - tests
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: "GCP: Auth"
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS_JSON }}'

      - name: "GCP: setup-gcloud"
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: neospring

      - name: "GCP: gcloud info"
        run: gcloud info

      - name: "GCP: Publish image"
        run: gcloud builds submit --tag gcr.io/neospring/neospring

      - name: "GCP: Deploy neospring"
        run: gcloud run deploy --image gcr.io/neospring/neospring --platform managed --region us-central1 neospring

  golangci-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: "Check: golangci-lint"
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.49

  program_starts:
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: "Go: Download modules"
        run: go mod download

      - name: "Go: Build"
        run: go build .

      - name: Check programs start
        # The process responds gracefully to `SIGTERM` by shutting itself down,
        # thus producing an exit code of 0 when things are working.
        run: |
          ( sleep 5 && killall -SIGTERM neospring ) &
          ./neospring

  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: "Go: Download modules"
        run: go mod download

      - name: "Go: Test"
        run: go test ./... -race

